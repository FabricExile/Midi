// Created by kl2dfg (processFunction)
{
  "objectType" : "Func",
  "metadata" : {
    "uiTooltip" : "\n\n Supported by AkaiMidiMix"
    },
  "title" : "GetMaster[]",
  "ports" : [
    {
      "objectType" : "Port",
      "nodePortType" : "Out",
      "name" : "this",
      "execPortType" : "In",
      "typeSpec" : "AkaiMidiMix[]"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "In",
      "name" : "result",
      "execPortType" : "Out",
      "typeSpec" : "Scalar[]"
      }
    ],
  "extDeps" : {
    "Midi" : "*"
    },
  "presetGUID" : "D195777CADA47851B1F955BBE228D879",
  "code" : "require Midi;

operator Midi_AkaiMidiMix_getMaster_task<<<index>>>(
  io Scalar[] result
, in AkaiMidiMix[] this
) {
  result[index] = this[index < this.size() ? index : this.size() - 1].getMaster();
}

dfgEntry {
  if( this.size() == 0) return;
  Size task_size = this.size();
  result.resize(task_size);
  if(task_size < 10000 /* pex margin */) {
    for(Size index = 0; index < task_size; index++) {
      Midi_AkaiMidiMix_getMaster_task(index, result, this);
    }
  } else {
    Midi_AkaiMidiMix_getMaster_task<<<task_size>>>(result, this);
  }
}
"
  }