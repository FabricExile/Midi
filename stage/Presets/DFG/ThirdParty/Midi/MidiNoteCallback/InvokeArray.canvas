// Created by kl2dfg (processFunction)
{
  "objectType" : "Func",
  "metadata" : {
    "uiTooltip" : "Supported types:\n  this: MidiNoteCallback\n  note: Byte\n  velocity: Byte\n"
    },
  "title" : "Invoke[]",
  "ports" : [
    {
      "objectType" : "Port",
      "nodePortType" : "IO",
      "name" : "this",
      "execPortType" : "IO",
      "typeSpec" : "MidiNoteCallback[]"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "Out",
      "defaultValues" : {
        "Byte[]" : [
          0
          ]
        },
      "name" : "note",
      "execPortType" : "In",
      "typeSpec" : "Byte[]"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "Out",
      "defaultValues" : {
        "Byte[]" : [
          0
          ]
        },
      "name" : "velocity",
      "execPortType" : "In",
      "typeSpec" : "Byte[]"
      }
    ],
  "extDeps" : {
    "Midi" : "*"
    },
  "presetGUID" : "67E3A9FE27F45A74EE7E59AFC019B2D2",
  "code" : "require Midi;

operator Midi_MidiNoteCallback_invoke_task<<<index>>>(
  io MidiNoteCallback[] this
, in Byte[] note
, in Byte[] velocity
) {
  this[index < this.size() ? index : this.size() - 1].invoke(note[index < note.size() ? index : note.size() - 1], velocity[index < velocity.size() ? index : velocity.size() - 1]);
}

dfgEntry {
  if( this.size() == 0) return;
  if( note.size() == 0) return;
  if( velocity.size() == 0) return;
  Size task_size = this.size();
  if(task_size < note.size()) task_size = note.size();
  if(task_size < velocity.size()) task_size = velocity.size();
  if(task_size < 10000 /* pex margin */) {
    for(Size index = 0; index < task_size; index++) {
      Midi_MidiNoteCallback_invoke_task(index, this, note, velocity);
    }
  } else {
    Midi_MidiNoteCallback_invoke_task<<<task_size>>>(this, note, velocity);
  }
}
"
  }